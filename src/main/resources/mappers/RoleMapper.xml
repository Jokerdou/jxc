<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxxx.erp.dao.RoleMapper" >
    <resultMap id="BaseResultMap" type="com.xxxx.erp.vo.Role" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="role_name" property="roleName" jdbcType="VARCHAR" />
        <result column="remarks" property="remarks" jdbcType="VARCHAR" />
        <result column="is_valid" property="isValid" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
    id, role_name, remarks, is_valid
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from t_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.xxxx.erp.vo.Role" >
    insert into t_role (id, role_name, remarks,
       is_valid
      )
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR},
       #{isValid,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.xxxx.erp.vo.Role" >
        insert into t_role
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="roleName != null" >
                role_name,
            </if>
            <if test="remarks != null" >
                remarks,
            </if>
            <if test="isValid != null" >
                is_valid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleName != null" >
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null" >
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="isValid != null" >
                #{isValid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.erp.vo.Role" >
        update t_role
        <set >
            <if test="roleName != null" >
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null" >
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="isValid != null" >
                is_valid = #{isValid,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xxxx.erp.vo.Role" >
    update t_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--查询所有的角色列表 (只需要id与roleName)-->
    <select id="queryAllRoles" resultType="java.util.Map" parameterType="java.lang.Integer">
  SELECT
    r.id,
    r.role_name AS roleName,
    CASE
      WHEN IFNULL(temp.id,0) = 0 THEN ''
      ELSE 'selected'
      END
    AS 'selected'
  FROM
    t_role r
      LEFT JOIN (SELECT r.id FROM t_role r LEFT JOIN t_user u ON u.user_id = r.id WHERE u.user_id = #{userId} ) temp ON r.id = temp.id
  WHERE
    r.is_valid =1
  </select>

    <!-- 多条件查询 -->
    <select id="selectByParams" parameterType="com.xxxx.erp.query.RoleQuery" resultType="com.xxxx.erp.vo.Role">
        select
        <include refid="Base_Column_List"></include>
        from
        t_role
        <where>
            is_valid = 1
            <if test="null != roleName and '' != roleName">
                and role_name like concat('%',#{roleName},'%')
            </if>
        </where>
    </select>

    <!--通过角色名查询角色记录-->
    <select id="selectByRoleName" resultMap="BaseResultMap" parameterType="String">
        select
        <include refid="Base_Column_List"></include>
        from
        t_role
        where
        is_valid = 1
        and
        role_name = #{roleName}
    </select>

    <!--批量删除(更新)-->
    <update id="deleteBatch">
        update
        t_role
        set
        is_valid = 0
        where
        id
        in
        <foreach collection="array" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
    </update>
</mapper>